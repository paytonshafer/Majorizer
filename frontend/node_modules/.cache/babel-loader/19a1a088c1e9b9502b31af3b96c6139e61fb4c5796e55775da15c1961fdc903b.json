{"ast":null,"code":"import _regeneratorRuntime from\"/Users/paytonshafer/Desktop/CS350/Majorizer/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/paytonshafer/Desktop/CS350/Majorizer/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/paytonshafer/Desktop/CS350/Majorizer/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//This is the page where the admin can manage the advisor student connections\nimport React,{useContext,useState,useEffect}from'react';import AuthContext from'../context/AuthContext.js';import'./styles/ConnectionPage.css';/*right now the connections are static hard coded. Later, we can make the connection component into a function and\nhave multiple appear. We can also then track each individually by an id and actually let the connectees know if\nthe connection was approved or denied */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PairingForm=function PairingForm(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),connections=_useState2[0],setConnections=_useState2[1];var refreshPage=function refreshPage(){setTimeout(function(){window.location.reload(false);},1000);};//PUT call goes here, then refresh the connections\nvar updateConnections=function updateConnections(){if(advSelect===''||studSelect===''||advSelect==='None'||studSelect==='None'){window.alert(\"Please Select an advisor and a student\");}else{var stud_id=studSelect;var adv_id=advSelect;fetch('http://127.0.0.1:8000/api/studconn/'+stud_id,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({\"advisor\":adv_id})}).then(refreshPage);console.log(JSON.stringify({\"advisor\":adv_id}));}};useEffect(function(){var getConnections=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('http://127.0.0.1:8000/api/advstudconn/',{method:'GET',headers:{'Content-Type':'application/json'}});case 2:response=_context.sent;_context.next=5;return response.json();case 5:data=_context.sent;//This should get the auth tokens if successful\nif(response.status===200){//if response is all good\nsetConnections(data);//set connections\nlocalStorage.setItem('AdminsConnections',JSON.stringify(data));//put the connections in local storage\n}else{alert('Something went wrong');}case 7:case\"end\":return _context.stop();}},_callee);}));return function getConnections(){return _ref.apply(this,arguments);};}();getConnections();},[]);var _useState3=useState('None'),_useState4=_slicedToArray(_useState3,2),advSelect=_useState4[0],setAdvSelect=_useState4[1];var _useState5=useState('None'),_useState6=_slicedToArray(_useState5,2),studSelect=_useState6[0],setStudSelect=_useState6[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\" Change Student/Advisor Pairings:\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"advselect\",children:\"Advisor:\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){setAdvSelect(e.target.value);},id:\"advselect\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"None\"}),/*#__PURE__*/_jsx(\"option\",{value:4,children:\"Advisor1\"}),/*#__PURE__*/_jsx(\"option\",{value:5,children:\"Advisor2\"})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"stuselect\",children:\"Student:\"}),/*#__PURE__*/_jsxs(\"select\",{onChange:function onChange(e){setStudSelect(e.target.value);},id:\"stuselect\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"None\"}),connections?connections.map(function(conn){return/*#__PURE__*/_jsx(\"option\",{value:conn.student.student.id,children:conn.student.student.username},conn.id);}):null]}),/*#__PURE__*/_jsx(\"h4\",{children:\"Make pair student, advisor? \"}),/*#__PURE__*/_jsx(\"button\",{className:\"confirm\",onClick:updateConnections,children:\"Confirm\"}),/*#__PURE__*/_jsx(\"h3\",{children:\" List of Current Student/Advisor Connections:\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Advisor Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Assigned Student\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:connections?connections.map(function(conn){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:conn?conn.advisor.username:null}),/*#__PURE__*/_jsx(\"td\",{children:conn?conn.student.student.username:null})]},conn.id);}):null})]})]});};var ConnectionPage=function ConnectionPage(){var _useContext=useContext(AuthContext),user=_useContext.user;/*function removeConnection(){\n        document.getElementById(\"connection-1\").style.display = \"none\";\n        \n    }*/return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"borderbox-2\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome, \",user.username,\".\"]}),/*#__PURE__*/_jsx(PairingForm,{})]})});};export default ConnectionPage;","map":{"version":3,"names":["React","useContext","useState","useEffect","AuthContext","jsx","_jsx","jsxs","_jsxs","PairingForm","_useState","_useState2","_slicedToArray","connections","setConnections","refreshPage","setTimeout","window","location","reload","updateConnections","advSelect","studSelect","alert","stud_id","adv_id","fetch","method","headers","body","JSON","stringify","then","console","log","getConnections","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","sent","json","status","localStorage","setItem","stop","apply","arguments","_useState3","_useState4","setAdvSelect","_useState5","_useState6","setStudSelect","children","htmlFor","onChange","e","target","value","id","map","conn","student","username","className","onClick","advisor","ConnectionPage","_useContext","user"],"sources":["/Users/paytonshafer/Desktop/CS350/Majorizer/frontend/src/pages/ConnectionPage.jsx"],"sourcesContent":["//This is the page where the admin can manage the advisor student connections\nimport React, {useContext, useState, useEffect} from 'react'\nimport AuthContext from '../context/AuthContext.js'\nimport './styles/ConnectionPage.css'\n/*right now the connections are static hard coded. Later, we can make the connection component into a function and\nhave multiple appear. We can also then track each individually by an id and actually let the connectees know if\nthe connection was approved or denied */\n\n\nconst PairingForm = () =>{\n    let [connections, setConnections] = useState()\n\n    const refreshPage = () => {\n        setTimeout(() => {\n            window.location.reload(false);\n          }, 1000);\n    }\n\n    //PUT call goes here, then refresh the connections\n    let updateConnections = () =>{\n        if( advSelect === '' || studSelect === '' || advSelect === 'None' || studSelect === 'None'){\n            window.alert(\"Please Select an advisor and a student\")\n        }else{\n            let stud_id = studSelect \n            let adv_id = advSelect\n            \n            fetch('http://127.0.0.1:8000/api/studconn/' + stud_id, {\n            method: 'PUT',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\"advisor\": adv_id})\n        }).then(refreshPage)\n        console.log(JSON.stringify({\"advisor\": adv_id}))\n        }\n    }\n\n    useEffect(()=>{\n        let getConnections = async () => {\n            //Here we fetch from our api with the username and password to return our auth tokens\n            let response = await fetch('http://127.0.0.1:8000/api/advstudconn/', {\n                method: 'GET',\n                headers:{\n                    'Content-Type': 'application/json'\n                }\n            })\n            let data = await response.json() //This should get the auth tokens if successful\n    \n            if(response.status === 200){ //if response is all good\n                setConnections(data) //set connections\n                localStorage.setItem('AdminsConnections', JSON.stringify(data)) //put the connections in local storage\n            }else{alert('Something went wrong')}\n        }\n        getConnections()\n    },[])\n\n    let [advSelect, setAdvSelect] = useState('None')\n    let [studSelect, setStudSelect] = useState('None')\n\n    return(\n        <div>\n            <h3> Change Student/Advisor Pairings:</h3>\n            <label htmlFor='advselect'>Advisor:</label>\n         <select \n         onChange={(e) => {setAdvSelect(e.target.value)}} id = 'advselect'\n         >\n            <option value=\"None\"></option>\n            <option value={4}>Advisor1</option>\n            <option value={5}>Advisor2</option>\n          </select>\n          <label htmlFor='stuselect'>Student:</label>\n         <select \n         onChange={(e) => {setStudSelect(e.target.value)}} id = 'stuselect'\n         >\n            <option value=\"None\"></option>\n            {connections ? connections.map((conn) => \n                        <option key={conn.id} value={conn.student.student.id}>{conn.student.student.username}</option>\n                    ): null}\n          </select>\n          <h4>Make pair student, advisor? </h4>\n          <button className = 'confirm' onClick={updateConnections}>Confirm</button>\n          <h3> List of Current Student/Advisor Connections:</h3>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Advisor Name</th>\n                        <th>Assigned Student</th>\n                    </tr>\n                </thead>\n                \n                {/*here is where connection table will go */}\n                <tbody>\n                    {connections ? connections.map((conn) => \n                        <tr key={conn.id}>\n                            <td>{conn ? conn.advisor.username : null}</td>\n                            <td>{conn ?conn.student.student.username : null}</td>\n                        </tr>\n                    ): null}\n                </tbody>\n                \n                {/*to here */}\n            </table>\n          </div>    \n    )\n}\n\nconst ConnectionPage = () => {\n    let {user} = useContext(AuthContext);\n    /*function removeConnection(){\n        document.getElementById(\"connection-1\").style.display = \"none\";\n        \n    }*/\n    return (\n        <div>\n            <div className='borderbox-2'>\n            <h1>Welcome, {user.username}.</h1>\n            <PairingForm></PairingForm>\n            </div>\n        </div>\n    )\n}\n\nexport default ConnectionPage;\n"],"mappings":"8aAAA;AACA,MAAO,CAAAA,KAAK,EAAGC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAC5D,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,6BAA6B,CACpC;AACA;AACA,wCAFA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAKA,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAQ,CACrB,IAAAC,SAAA,CAAoCR,QAAQ,EAAE,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAEhC,GAAM,CAAAI,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACtBC,UAAU,CAAC,UAAM,CACbC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC,CAC/B,CAAC,CAAE,IAAI,CAAC,CACd,CAAC,CAED;AACA,GAAI,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAQ,CACzB,GAAIC,SAAS,GAAK,EAAE,EAAIC,UAAU,GAAK,EAAE,EAAID,SAAS,GAAK,MAAM,EAAIC,UAAU,GAAK,MAAM,CAAC,CACvFL,MAAM,CAACM,KAAK,CAAC,wCAAwC,CAAC,CAC1D,CAAC,IAAI,CACD,GAAI,CAAAC,OAAO,CAAGF,UAAU,CACxB,GAAI,CAAAG,MAAM,CAAGJ,SAAS,CAEtBK,KAAK,CAAC,qCAAqC,CAAGF,OAAO,CAAE,CACvDG,MAAM,CAAE,KAAK,CACbC,OAAO,CAAC,CACJ,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAC,SAAS,CAAEN,MAAM,CAAC,CAC5C,CAAC,CAAC,CAACO,IAAI,CAACjB,WAAW,CAAC,CACpBkB,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,SAAS,CAAC,CAAC,SAAS,CAAEN,MAAM,CAAC,CAAC,CAAC,CAChD,CACJ,CAAC,CAEDtB,SAAS,CAAC,UAAI,CACV,GAAI,CAAAgC,cAAc,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,QAAA,CAAAC,IAAA,QAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAE,IAAA,SAEI,CAAArB,KAAK,CAAC,wCAAwC,CAAE,CACjEC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAC,CACJ,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,QALEa,QAAQ,CAAAI,QAAA,CAAAG,IAAA,CAAAH,QAAA,CAAAE,IAAA,SAMK,CAAAN,QAAQ,CAACQ,IAAI,EAAE,QAA5BP,IAAI,CAAAG,QAAA,CAAAG,IAAA,CAAyB;AAEjC,GAAGP,QAAQ,CAACS,MAAM,GAAK,GAAG,CAAC,CAAE;AACzBpC,cAAc,CAAC4B,IAAI,CAAC,CAAC;AACrBS,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAEtB,IAAI,CAACC,SAAS,CAACW,IAAI,CAAC,CAAC,CAAC;AACpE,CAAC,IAAI,CAACnB,KAAK,CAAC,sBAAsB,CAAC,EAAC,wBAAAsB,QAAA,CAAAQ,IAAA,MAAAb,OAAA,GACvC,kBAdG,CAAAL,cAAcA,CAAA,SAAAC,IAAA,CAAAkB,KAAA,MAAAC,SAAA,OAcjB,CACDpB,cAAc,EAAE,CACpB,CAAC,CAAC,EAAE,CAAC,CAEL,IAAAqB,UAAA,CAAgCtD,QAAQ,CAAC,MAAM,CAAC,CAAAuD,UAAA,CAAA7C,cAAA,CAAA4C,UAAA,IAA3CnC,SAAS,CAAAoC,UAAA,IAAEC,YAAY,CAAAD,UAAA,IAC5B,IAAAE,UAAA,CAAkCzD,QAAQ,CAAC,MAAM,CAAC,CAAA0D,UAAA,CAAAhD,cAAA,CAAA+C,UAAA,IAA7CrC,UAAU,CAAAsC,UAAA,IAAEC,aAAa,CAAAD,UAAA,IAE9B,mBACIpD,KAAA,QAAAsD,QAAA,eACIxD,IAAA,OAAAwD,QAAA,CAAI,mCAAiC,EAAK,cAC1CxD,IAAA,UAAOyD,OAAO,CAAC,WAAW,CAAAD,QAAA,CAAC,UAAQ,EAAQ,cAC9CtD,KAAA,WACAwD,QAAQ,CAAE,SAAAA,SAACC,CAAC,CAAK,CAACP,YAAY,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE,CAACC,EAAE,CAAG,WAAW,CAAAN,QAAA,eAE9DxD,IAAA,WAAQ6D,KAAK,CAAC,MAAM,EAAU,cAC9B7D,IAAA,WAAQ6D,KAAK,CAAE,CAAE,CAAAL,QAAA,CAAC,UAAQ,EAAS,cACnCxD,IAAA,WAAQ6D,KAAK,CAAE,CAAE,CAAAL,QAAA,CAAC,UAAQ,EAAS,GAC5B,cACTxD,IAAA,UAAOyD,OAAO,CAAC,WAAW,CAAAD,QAAA,CAAC,UAAQ,EAAQ,cAC5CtD,KAAA,WACAwD,QAAQ,CAAE,SAAAA,SAACC,CAAC,CAAK,CAACJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,EAAE,CAACC,EAAE,CAAG,WAAW,CAAAN,QAAA,eAE/DxD,IAAA,WAAQ6D,KAAK,CAAC,MAAM,EAAU,CAC7BtD,WAAW,CAAGA,WAAW,CAACwD,GAAG,CAAC,SAACC,IAAI,qBACxBhE,IAAA,WAAsB6D,KAAK,CAAEG,IAAI,CAACC,OAAO,CAACA,OAAO,CAACH,EAAG,CAAAN,QAAA,CAAEQ,IAAI,CAACC,OAAO,CAACA,OAAO,CAACC,QAAQ,EAAvEF,IAAI,CAACF,EAAE,CAA0E,GACjG,CAAE,IAAI,GACR,cACT9D,IAAA,OAAAwD,QAAA,CAAI,8BAA4B,EAAK,cACrCxD,IAAA,WAAQmE,SAAS,CAAG,SAAS,CAACC,OAAO,CAAEtD,iBAAkB,CAAA0C,QAAA,CAAC,SAAO,EAAS,cAC1ExD,IAAA,OAAAwD,QAAA,CAAI,+CAA6C,EAAK,cACpDtD,KAAA,UAAAsD,QAAA,eACIxD,IAAA,UAAAwD,QAAA,cACItD,KAAA,OAAAsD,QAAA,eACIxD,IAAA,OAAAwD,QAAA,CAAI,cAAY,EAAK,cACrBxD,IAAA,OAAAwD,QAAA,CAAI,kBAAgB,EAAK,GACxB,EACD,cAGRxD,IAAA,UAAAwD,QAAA,CACKjD,WAAW,CAAGA,WAAW,CAACwD,GAAG,CAAC,SAACC,IAAI,qBAChC9D,KAAA,OAAAsD,QAAA,eACIxD,IAAA,OAAAwD,QAAA,CAAKQ,IAAI,CAAGA,IAAI,CAACK,OAAO,CAACH,QAAQ,CAAG,IAAI,EAAM,cAC9ClE,IAAA,OAAAwD,QAAA,CAAKQ,IAAI,CAAEA,IAAI,CAACC,OAAO,CAACA,OAAO,CAACC,QAAQ,CAAG,IAAI,EAAM,GAFhDF,IAAI,CAACF,EAAE,CAGX,GACR,CAAE,IAAI,EACH,GAGJ,GACJ,CAEhB,CAAC,CAED,GAAM,CAAAQ,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CACzB,IAAAC,WAAA,CAAa5E,UAAU,CAACG,WAAW,CAAC,CAA/B0E,IAAI,CAAAD,WAAA,CAAJC,IAAI,CACT;AACJ;AACA;AACA,OACI,mBACIxE,IAAA,QAAAwD,QAAA,cACItD,KAAA,QAAKiE,SAAS,CAAC,aAAa,CAAAX,QAAA,eAC5BtD,KAAA,OAAAsD,QAAA,EAAI,WAAS,CAACgB,IAAI,CAACN,QAAQ,CAAC,GAAC,GAAK,cAClClE,IAAA,CAACG,WAAW,IAAe,GACrB,EACJ,CAEd,CAAC,CAED,cAAe,CAAAmE,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}