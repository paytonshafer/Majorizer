{"ast":null,"code":"var _jsxFileName = \"/workspaces/Majorizer/frontend/src/context/StaticData.js\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticData = /*#__PURE__*/createContext();\nexport default StaticData;\nexport const DataProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  //Have students, each student will represent a studet so the advisor has their data (foreign key)\n  let advisors;\n\n  //course will have course id, name, credits, professor, location, days(MWF or TT)\n  let course;\n\n  //schedules have x semesters each with ~5 classes\n  let schedule;\n\n  //Students have schedules, major/minor, name, requests(for their advisor)\n  let students;\n\n  //This is the data that will be served in the context\n  let contextData = {};\n\n  //we return the dataprovider such that the children of it have acess to the content\n  return /*#__PURE__*/_jsxDEV(StaticData.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","jsxDEV","_jsxDEV","StaticData","DataProvider","_ref","children","advisors","course","schedule","students","contextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/Majorizer/frontend/src/context/StaticData.js"],"sourcesContent":["import { createContext } from \"react\";\n\nconst StaticData = createContext()\n\nexport default StaticData;\n\nexport const DataProvider = ({children}) => {\n    //Have students, each student will represent a studet so the advisor has their data (foreign key)\n    let advisors\n\n    //course will have course id, name, credits, professor, location, days(MWF or TT)\n    let course \n\n    //schedules have x semesters each with ~5 classes\n    let schedule\n\n    //Students have schedules, major/minor, name, requests(for their advisor)\n    let students\n\n    //This is the data that will be served in the context\n    let contextData = {\n        \n    }\n\n    //we return the dataprovider such that the children of it have acess to the content\n    return(\n        <StaticData.Provider value={contextData}>\n            {children}\n        </StaticData.Provider>\n    )\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,gBAAGH,aAAa,EAAE;AAElC,eAAeG,UAAU;AAEzB,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACnC;EACA,IAAIE,QAAQ;;EAEZ;EACA,IAAIC,MAAM;;EAEV;EACA,IAAIC,QAAQ;;EAEZ;EACA,IAAIC,QAAQ;;EAEZ;EACA,IAAIC,WAAW,GAAG,CAElB,CAAC;;EAED;EACA,oBACIT,OAAA,CAACC,UAAU,CAACS,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAAL,QAAA,EACnCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAE9B,CAAC;AAAAC,EAAA,GAxBYd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}